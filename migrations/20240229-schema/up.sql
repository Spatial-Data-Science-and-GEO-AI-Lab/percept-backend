CREATE EXTENSION IF NOT EXISTS postgis;

CREATE TABLE language (
    langabbr VARCHAR(2) PRIMARY KEY,
    fullname TEXT
);

CREATE TABLE string (
    string_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    k TEXT
);

CREATE TABLE translation (
    string_id INT REFERENCES string,
    langabbr VARCHAR(2) REFERENCES language,
    v TEXT
);

CREATE TABLE useragent (
  useragent_id UUID PRIMARY KEY,
  useragent_str TEXT
);

CREATE TABLE survey (
    survey_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    age SMALLINT,
    monthly_gross_income TEXT,
    education TEXT,
    gender TEXT,
    postalcode TEXT,
    country TEXT,
    consent BOOLEAN
);

CREATE TABLE person (
    person_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    survey_id INT REFERENCES survey
);

CREATE TABLE session (
    session_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    person_id INT REFERENCES person,
    session_start TIMESTAMPTZ DEFAULT now(),
    session_active TIMESTAMPTZ DEFAULT now()
);

CREATE TABLE cookie (
    cookie_hash BYTEA,
    person_id INT REFERENCES person,
    cookie_creation TIMESTAMPTZ DEFAULT now(),
    expiration TIMESTAMPTZ,
    ipaddr inet,
    useragent_id UUID REFERENCES useragent
);

CREATE TABLE image (
    image_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    system_path TEXT UNIQUE,
    url TEXT UNIQUE,
    cityname TEXT,
    enabled BOOLEAN DEFAULT false
);

CREATE TABLE category (
    category_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    shortname_sid INT REFERENCES string,
    description_sid INT REFERENCES string
);

CREATE TABLE rating (
    rating_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    ts TIMESTAMPTZ DEFAULT now(),
    session_id INT REFERENCES session,
    image_id INT REFERENCES image,
    category_id INT REFERENCES category,
    rating SMALLINT,
    ipaddr inet,
    useragent_id UUID REFERENCES useragent
);

CREATE TABLE undoable (
  session_id INT REFERENCES session UNIQUE,
  rating_id INT REFERENCES rating
);

CREATE TABLE image_geo (
  image_id INT UNIQUE REFERENCES image,
  angle_deg FLOAT,
  geo geometry(POINT, 4326),
  geo97415 geometry(POINT, 97415)
);

CREATE OR REPLACE VIEW rrating AS
SELECT rating_id, ts, session_id, image_id, category_id, rating, postalcode, country, age, monthly_gross_income, education, gender
FROM rating
JOIN session USING (session_id)
JOIN person USING (person_id)
JOIN survey USING (survey_id)
WHERE age >= 18;
